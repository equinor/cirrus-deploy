#!/usr/bin/env bash
set -ex

petsc_rev="v3.19.1"
cirrus_version="1.9"

petsc_url="https://gitlab.com/petsc/petsc.git"
cirrus_token="ATCTT3xFfGN0j1udFKgGz_MVnVnnSz2NKXzErXgwXjEx7iQFKX6u0AbUAmZjZyPbCMejRGBfeL0MWjATy6RnY-MJ-OiVUmf4q_OcItL8Iz9X20H2hbFwwdeRq6QzPMjW4nmJTKPVntehmZSmBFJ0PlqAbSmCNmZkLZX8-vdYNNCIQ8cd19fZ7yc=9A1C10DD"
cirrus_url="https://x-token-auth:${cirrus_token}@bitbucket.org/opengosim/cirrus_${cirrus_version}.git"

out="$PWD/result"

# Remove output if previously generated
rm -rf $out

# --------------------------------------
# Clone
# --------------------------------------
mkdir $out
git clone --depth=1 --branch="${petsc_rev}" -- "${petsc_url}" $out/.git-petsc
git clone --depth=1 --branch="release" -- "${cirrus_url}" $out/.git-cirrus

# --------------------------------------
# Prepare environment
# --------------------------------------

# When running interactively, enter bash on error
if tty -s
then
    echo "INFO: Enabling bash shell on error"
    function on_err {
        echo "!!! ERROR DURING BUILD !!!" >&2
        bash
    }
    trap on_err ERR
fi

# --------------------------------------
# Build petsc
# --------------------------------------
cd $out/.git-petsc

export PETSC_DIR=$PWD
export PETSC_ARCH=gnu-c-opt

./configure                                  \
    --CFLAGS="-O3"                           \
    --CXXFLAGS="-O3"                         \
    --FFLAGS="-O3"                           \
    --download-fblaslapack=yes               \
    --download-hdf5=yes                      \
    --download-hypre=yes                     \
    --download-openmpi=yes                   \
    --download-ptscotch=yes                  \
    --download-hdf5-fortran-bindings=yes     \
    --with-debugging=0                       \
    --prefix=$out

make all
make check
make install

# --------------------------------------
# Build Cirrus
# --------------------------------------
cd $out/.git-cirrus/src/pflotran

make UPDATE_PROVENANCE=0 pflotran
make check
install -D pflotran $out/bin/pflotran
