#!/usr/bin/env bash
set -ex

cd $(dirname $0)

# --------------------------------------
# Prepare environment
# --------------------------------------

source ./config
tmp="$PWD/result"
key="$(readlink -f $(basename $0))/git-cirrus-deploy-key"
out="${ENV_OUT}"

if [ -d "$out" ]; then
    set +x
    echo "Environment target directory already exists:" >&2
    echo "  $out"
    echo "Maybe it's alreayd installed?" >&2
    echo "Either:" >&2
    echo "  1. Increment ENV_BUILD in ./config" >&2
    echo "  2. rm -rf $out" >&2

    exit 1
fi

# When running interactively, enter bash on error
if tty -s
then
    echo "INFO: Enabling bash shell on error"
    function on_err {
        echo "!!! ERROR DURING BUILD !!!" >&2
        bash
    }
    trap on_err ERR
fi

# --------------------------------------
# Create environment
# --------------------------------------
SCRIPT=$(cat <<-EOF
import os
import sys
import contextlib

out = sys.argv[1]
paths = sys.argv[2:]

for path in paths:
  print(f"Adding {path}")
  for srcdir, subdirs, files in os.walk(path):
    dstdir = os.path.join(out, srcdir[len(path)+1:])
    with contextlib.suppress(FileExistsError):
      os.mkdir(dstdir)
    for f in files:
      with contextlib.suppress(FileExistsError):
        os.symlink(os.path.join(srcdir, f), os.path.join(dstdir, f))
EOF
)
python3 -c "$SCRIPT" "$out" "${PETSC_OUT}" "${CIRRUS_OUT}"
